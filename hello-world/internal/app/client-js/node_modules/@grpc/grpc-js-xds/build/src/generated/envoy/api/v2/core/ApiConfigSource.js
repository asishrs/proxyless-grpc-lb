"use strict";
// Original file: deps/envoy-api/envoy/api/v2/core/config_source.proto
Object.defineProperty(exports, "__esModule", { value: true });
exports._envoy_api_v2_core_ApiConfigSource_ApiType = void 0;
// Original file: deps/envoy-api/envoy/api/v2/core/config_source.proto
/**
 * APIs may be fetched via either REST or gRPC.
 */
var _envoy_api_v2_core_ApiConfigSource_ApiType;
(function (_envoy_api_v2_core_ApiConfigSource_ApiType) {
    /**
     * Ideally this would be 'reserved 0' but one can't reserve the default
     * value. Instead we throw an exception if this is ever used.
     */
    _envoy_api_v2_core_ApiConfigSource_ApiType[_envoy_api_v2_core_ApiConfigSource_ApiType["UNSUPPORTED_REST_LEGACY"] = 0] = "UNSUPPORTED_REST_LEGACY";
    /**
     * REST-JSON v2 API. The `canonical JSON encoding
     * <https://developers.google.com/protocol-buffers/docs/proto3#json>`_ for
     * the v2 protos is used.
     */
    _envoy_api_v2_core_ApiConfigSource_ApiType[_envoy_api_v2_core_ApiConfigSource_ApiType["REST"] = 1] = "REST";
    /**
     * gRPC v2 API.
     */
    _envoy_api_v2_core_ApiConfigSource_ApiType[_envoy_api_v2_core_ApiConfigSource_ApiType["GRPC"] = 2] = "GRPC";
    /**
     * Using the delta xDS gRPC service, i.e. DeltaDiscovery{Request,Response}
     * rather than Discovery{Request,Response}. Rather than sending Envoy the entire state
     * with every update, the xDS server only sends what has changed since the last update.
     */
    _envoy_api_v2_core_ApiConfigSource_ApiType[_envoy_api_v2_core_ApiConfigSource_ApiType["DELTA_GRPC"] = 3] = "DELTA_GRPC";
})(_envoy_api_v2_core_ApiConfigSource_ApiType = exports._envoy_api_v2_core_ApiConfigSource_ApiType || (exports._envoy_api_v2_core_ApiConfigSource_ApiType = {}));
//# sourceMappingURL=ApiConfigSource.js.map