import { experimental } from '@grpc/grpc-js';
import SubchannelAddress = experimental.SubchannelAddress;
import LoadBalancer = experimental.LoadBalancer;
import ChannelControlHelper = experimental.ChannelControlHelper;
import LoadBalancingConfig = experimental.LoadBalancingConfig;
export declare class CdsLoadBalancingConfig implements LoadBalancingConfig {
    private cluster;
    getLoadBalancerName(): string;
    toJsonObject(): object;
    constructor(cluster: string);
    getCluster(): string;
    static createFromJson(obj: any): CdsLoadBalancingConfig;
}
export declare class CdsLoadBalancer implements LoadBalancer {
    private readonly channelControlHelper;
    private childBalancer;
    private watcher;
    private isWatcherActive;
    private latestCdsUpdate;
    private latestConfig;
    private latestAttributes;
    constructor(channelControlHelper: ChannelControlHelper);
    updateAddressList(addressList: SubchannelAddress[], lbConfig: LoadBalancingConfig, attributes: {
        [key: string]: unknown;
    }): void;
    exitIdle(): void;
    resetBackoff(): void;
    destroy(): void;
    getTypeName(): string;
}
export declare function setup(): void;
